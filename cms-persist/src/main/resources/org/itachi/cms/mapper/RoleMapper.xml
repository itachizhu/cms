<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.itachi.cms.mapper.RoleMapper">

    <resultMap id="roleResultMap" type="roleDTO">
        <id property="id" column="id"/>
        <result property="pid" column="pid" javaType="Long"/>
        <result property="name" column="name" javaType="string"/>
        <result property="module" column="module" javaType="string"/>
        <result property="action" column="action" javaType="string"/>
        <result property="roleurl" column="roleurl" javaType="string"/>
        <result property="ismenu" column="ismenu" javaType="int" jdbcType="INTEGER"/>
        <result property="describe" column="des" javaType="string"/>
    </resultMap>

    <resultMap id="roleTreeResultMap" type="roleTreeDTO">
        <id property="id" column="id"/>
        <result property="pId" column="pid" javaType="Long"/>
        <result property="name" column="name" javaType="string"/>
        <result property="open" column="open" javaType="Boolean" jdbcType="CHAR"/>
        <result property="checked" column="checked" javaType="Boolean" jdbcType="CHAR"/>
        <result property="roleurl" column="roleurl" javaType="string"/>
        <result property="click" column="click" javaType="string"/>
    </resultMap>

    <sql id="condition">
        <if test="roleName !=null and roleName!=''">
            AND  t.name =#{roleName}
        </if>
        <if test="roleUrl !=null and roleUrl!=''">
            AND   t.roleurl = #{roleUrl}
        </if>
    </sql>

    <select id="countRole" resultType="int" parameterType="map">
        SELECT count(1) from t_role t where t.pid = #{roleid}
        <include refid="condition"/>

    </select>

    <select id="findRole" resultMap="roleResultMap" parameterType="long">
        SELECT * from t_role t where t.id = #{id}
    </select>

    <select id="getRoles" resultMap="roleResultMap" parameterType="map">
        SELECT id, pid, name, roleurl, module, action, ismenu, des from t_role t where t.pid = #{roleid}
        <include refid="condition"/>
        limit #{begin}, #{rows}
    </select>


    <select id="isAdmin" resultType="long" parameterType="adminUserDTO">
        SELECT groupid from t_user_group_rel t where t.userid = #{id} and t.isdel =1
    </select>



    <select id="getAdminRole" resultMap="roleTreeResultMap">
        SELECT t.id, pid, name, roleurl , ismenu, des from t_role t where t.id != 0 and t.ismenu = 0
    </select>

    <select id="getRoleTree" resultMap="roleTreeResultMap" parameterType="adminUserDTO">
        SELECT DISTINCT t.id, pid, name, roleurl , ismenu, des from
        t_role t,t_user_group_rel ug,t_group_role_rel gr
        where t.id != 0 and t.ismenu = 0 and t.id = gr.roleid and ug.userid=#{id}
        and ug.groupid = gr.groupid and ug.isdel=1 and gr.isdel =1
    </select>

    <select id="listTree" resultMap="roleTreeResultMap" parameterType="map">
        SELECT id, pid, name, roleurl, ismenu, des from t_role t
        <if test="needRoot !=true">
            where t.id != 0
        </if>
    </select>


    <insert id="addRoleDTO" parameterType="roleDTO">
        INSERT into t_role (pid,name,module,action,roleurl,ismenu,des)
        VALUES (
            #{pid,jdbcType=INTEGER},
            #{name,jdbcType=VARCHAR},
            #{module,jdbcType=VARCHAR},
            #{action,jdbcType=VARCHAR},
            #{roleurl,jdbcType=VARCHAR},
            #{ismenu,jdbcType=TINYINT},
            #{describe,jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateRoleDTO" parameterType="roleDTO">
        update t_role SET
            pid= #{pid,jdbcType=INTEGER},
            name=  #{name,jdbcType=VARCHAR},
            module=  #{module,jdbcType=VARCHAR},
            action=  #{action,jdbcType=VARCHAR},
            roleurl=  #{roleurl,jdbcType=VARCHAR},
            ismenu=  #{ismenu,jdbcType=TINYINT},
            des=  #{describe,jdbcType=VARCHAR}
        where id=#{id};
    </update>

    <delete id="deleteRoleDTO"  parameterType="list">
        DELETE FROM t_role WHERE id in
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="countRolesByPid" resultType="int" parameterType="list">
        select count(1) from t_role where pid in
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>



</mapper>